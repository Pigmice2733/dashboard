{"errors":[],"warnings":[],"version":"3.10.0","hash":"01cb37e01b6ed9b953c6","children":[{"errors":[],"warnings":[],"hash":"01cb37e01b6ed9b953c6","time":4476,"publicPath":"","assetsByChunkName":{"main":["scripts.js","styles.css","scripts.js.map","styles.css.map"]},"assets":[{"name":"index.html","size":219,"chunks":[],"chunkNames":[],"emitted":true},{"name":"scripts.js","size":80701,"chunks":[0],"chunkNames":["main"],"emitted":true},{"name":"styles.css","size":338,"chunks":[0],"chunkNames":["main"],"emitted":true},{"name":"scripts.js.map","size":104340,"chunks":[0],"chunkNames":["main"],"emitted":true},{"name":"styles.css.map","size":87,"chunks":[0],"chunkNames":["main"],"emitted":true}],"filteredAssets":0,"entrypoints":{"main":{"chunks":[0],"assets":["scripts.js","styles.css","scripts.js.map","styles.css.map"]}},"chunks":[{"id":0,"rendered":true,"initial":true,"entry":true,"extraAsync":false,"size":76209,"names":["main"],"files":["scripts.js","styles.css","scripts.js.map","styles.css.map"],"hash":"a090a75c8d4a7ac84170","parents":[],"modules":[{"id":0,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/preact/dist/preact.esm.js","name":"./node_modules/preact/dist/preact.esm.js","index":2,"index2":0,"size":31478,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"preact","loc":"166:15-32"},{"moduleId":3,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","module":"./src/components/robot-map/index.tsx","moduleName":"./src/components/robot-map/index.tsx","type":"cjs require","userRequest":"preact","loc":"5:15-32"}],"usedExports":true,"providedExports":["h","createElement","cloneElement","Component","render","rerender","options","default"],"optimizationBailout":["ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/components/robot-map/index.tsx (referenced with cjs require), ./src/index.tsx (referenced with cjs require)"],"depth":2,"source":"/** Virtual DOM Node */\nfunction VNode() {}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nvar options = {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n  *\t@name syncComponentUpdates\n  *\t@type Boolean\n  *\t@default true\n  */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n  *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n  */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virutal DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\n// DOM properties that should NOT have \"px\" added when numeric\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n/** Managed queue of dirty components to be re-rendered */\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p,\n\t    list = items;\n\titems = [];\n\twhile (p = list.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hyrdating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nfunction isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined;\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName;\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nfunction isNamedNode(node, nodeName) {\n  return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nfunction getNodeProps(vnode) {\n  var props = extend({}, vnode.attributes);\n  props.children = vnode.children;\n\n  var defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (var i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {\n\t\t// ignore\n\t} else if (name === 'ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value == null ? '' : value);\n\t\tif (value == null || value === false) node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink\\:?/, ''));\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nvar mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nvar diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nvar isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nvar hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.pop()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\t// If the VNode represents a Component, perform a component diff:\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t} // if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t} else {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nvar components = {};\n\n/** Reclaim a component for later re-use by the recycler. */\nfunction collectComponent(component) {\n\tvar name = component.constructor.name;\n\t(components[name] || (components[name] = [])).push(component);\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nfunction createComponent(Ctor, props, context) {\n\tvar list = components[Ctor.name],\n\t    inst;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\tif (list) {\n\t\tfor (var i = list.length; i--;) {\n\t\t\tif (list[i].constructor === Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif (component.__ref = props.ref) delete props.ref;\n\tif (component.__key = props.key) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t} else if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts !== 0) {\n\t\tif (opts === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\t\t\t// set up high order component link\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t} else if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tif (component._renderCallbacks != null) {\n\t\twhile (component._renderCallbacks.length) {\n\t\t\tcomponent._renderCallbacks.pop().call(component);\n\t\t}\n\t}\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\tcollectComponent(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.context = context;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.props = props;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.state = this.state || {};\n}\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n  *\t@param {object} nextProps\n  *\t@param {object} nextState\n  *\t@param {object} nextContext\n  *\t@returns {Boolean} should the component re-render\n  *\t@name shouldComponentUpdate\n  *\t@function\n  */\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n  *\t@param {object} state\t\tA hash of state properties to update with new values\n  *\t@param {function} callback\tA function to be called once component state is updated\n  */\n\tsetState: function setState(state, callback) {\n\t\tvar s = this.state;\n\t\tif (!this.prevState) this.prevState = extend({}, s);\n\t\textend(s, typeof state === 'function' ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n  *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n  *\t@private\n  */\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n  *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n  *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n  *\t@param {object} state\t\tThe component's current state\n  *\t@param {object} context\t\tContext object (if a parent component has provided context)\n  *\t@returns VNode\n  */\n\trender: function render() {}\n});\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport { h, h as createElement, cloneElement, Component, render, rerender, options };\nexport default preact;\n//# sourceMappingURL=preact.esm.js.map\n"},{"id":1,"identifier":"multi ./index.tsx ./index.sgr","name":"multi ./index.tsx ./index.sgr","index":0,"index2":11,"size":40,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":null,"issuerId":null,"issuerName":null,"failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":0},{"id":2,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","name":"./src/index.tsx","index":1,"index2":9,"size":5942,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"multi ./index.tsx ./index.sgr","issuerId":1,"issuerName":"multi ./index.tsx ./index.sgr","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":1,"moduleIdentifier":"multi ./index.tsx ./index.sgr","module":"multi ./index.tsx ./index.sgr","moduleName":"multi ./index.tsx ./index.sgr","type":"single entry","userRequest":"./index.tsx","loc":"main:100000"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nexports.__esModule = true;\n\nvar preact_1 = require(\"preact\");\n\nvar robot_map_1 = require(\"./components/robot-map\");\n\nrequire(\"./style\");\n\nvar wpilib_nt_client_1 = require(\"wpilib-nt-client\");\n\nvar client = new wpilib_nt_client_1.Client();\n\nvar connect = function connect(address) {\n  return new Promise(function (resolve) {\n    client.start(function (con, err) {\n      resolve(con);\n    }, address, 1735);\n  });\n};\n\nvar handle = function handle(options) {\n  return function (key, value) {\n    options[key] ? options[key](value) : console.log(key);\n  };\n};\n\nvar Main =\n/** @class */\nfunction (_super) {\n  __extends(Main, _super);\n\n  function Main() {\n    var _this = _super.call(this) || this;\n\n    _this.setupNT = function () {\n      setInterval(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.setState({\n              connected: client.isConnected()\n            });\n\n            if (!this.state.connected) {\n              connect(this.state.address);\n            }\n\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }, 200);\n    };\n\n    _this.state = {\n      angle: 0,\n      x: 0,\n      y: 0,\n      connected: false,\n      path: [],\n      address: 'localhost'\n    };\n    return _this;\n  }\n\n  Main.prototype.componentWillMount = function () {\n    var _this = this;\n\n    this.setupNT();\n    client.addListener(handle({\n      '/path_tracking/robot_state/rotation': function path_trackingRobot_stateRotation(a) {\n        return _this.setState({\n          angle: a - Math.PI / 2\n        });\n      },\n      '/path_tracking/robot_state/x': function path_trackingRobot_stateX(x) {\n        return _this.setState({\n          x: x\n        });\n      },\n      '/path_tracking/robot_state/y': function path_trackingRobot_stateY(y) {\n        return _this.setState({\n          y: y\n        });\n      },\n      '/path_tracking/path': function path_trackingPath(p) {\n        return _this.setState({\n          path: JSON.parse(p)\n        });\n      }\n    }));\n  };\n\n  Main.prototype.render = function (_, _a) {\n    var x = _a.x,\n        y = _a.y,\n        angle = _a.angle,\n        path = _a.path;\n    console.log(path);\n    return preact_1.h(\"div\", null, preact_1.h(robot_map_1[\"default\"], {\n      x: x,\n      y: y,\n      angle: angle,\n      path: path\n    }), preact_1.h(\"h2\", null, this.state.connected ? 'Connected' : 'Disconnected'));\n  };\n\n  return Main;\n}(preact_1.Component);\n\npreact_1.render(preact_1.h(Main, null), document.body);"},{"id":3,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","name":"./src/components/robot-map/index.tsx","index":3,"index2":3,"size":653,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"./components/robot-map","loc":"168:18-51"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":2,"source":"\"use strict\";\n\nexports.__esModule = true;\n\nvar preact_1 = require(\"preact\");\n\nrequire(\"./style\");\n\nvar RobotMap = function RobotMap(_a) {\n  var x = _a.x,\n      y = _a.y,\n      angle = _a.angle,\n      path = _a.path;\n  return preact_1.h(\"div\", {\n    \"class\": \"g-robot-map\"\n  }, preact_1.h(\"div\", {\n    \"class\": \"robot\",\n    style: {\n      transform: \"\\ntranslate(\" + (x - 1) + \"em, \" + (54 - y - 1.5) + \"em)\\nrotate(\" + -angle + \"rad)\"\n    }\n  }), path.map(function (p) {\n    return preact_1.h(\"div\", {\n      \"class\": \"point\",\n      style: {\n        left: p[0] + \"em\",\n        bottom: p[1] + \"em\"\n      }\n    });\n  }));\n};\n\nexports[\"default\"] = RobotMap;"},{"id":4,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/es6-extract-text-webpack-plugin/dist/loader.js??ref--2-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js??ref--2-2!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","name":"./src/components/robot-map/style.sss","index":4,"index2":2,"size":245,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","issuerId":3,"issuerName":"./src/components/robot-map/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":3,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","module":"./src/components/robot-map/index.tsx","moduleName":"./src/components/robot-map/index.tsx","type":"cjs require","userRequest":"./style","loc":"7:0-18"}],"usedExports":true,"providedExports":["default","gRobotMap","robot","point"],"optimizationBailout":["ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/components/robot-map/index.tsx (referenced with cjs require)"],"depth":3,"source":"// removed by extract-text-webpack-plugin\nexport default {\"g-robot-map\":\"g-robot-map\",\"gRobotMap\":\"g-robot-map\",\"robot\":\"robot\",\"point\":\"point\"};\nexport const gRobotMap = \"g-robot-map\";\nexport const robot = \"robot\";\nexport const point = \"point\";"},{"id":5,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/es6-extract-text-webpack-plugin/dist/loader.js??ref--2-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js??ref--2-2!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","name":"./src/style.sss","index":6,"index2":4,"size":41,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"./style","loc":"170:0-18"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":2,"source":"// removed by extract-text-webpack-plugin"},{"id":6,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","name":"./node_modules/wpilib-nt-client/index.js","index":7,"index2":8,"size":35616,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"wpilib-nt-client","loc":"172:25-52"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":2,"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ieee754 = require(\"ieee754\");\r\nconst net = require(\"net\");\r\nconst buffer_1 = require(\"buffer\");\r\nvar strLenIdent = numTo128;\r\nclass Client {\r\n    constructor(options) {\r\n        this.clientName = \"NodeJS\" + Date.now();\r\n        this.connected = false;\r\n        this.entries = {};\r\n        this.oldEntries = {};\r\n        this.keymap = {};\r\n        this.newKeyMap = [];\r\n        this.updatedIDs = [];\r\n        this.reconnect = false;\r\n        this.known = false;\r\n        this.listeners = [];\r\n        this.RPCExecCallback = {};\r\n        this.lateCallbacks = [];\r\n        this.is2_0 = false;\r\n        this.reAssign = {};\r\n        this.beingAssigned = [];\r\n        this.strictInput = false;\r\n        this.recProto = {\r\n            /** Keep Alive */\r\n            0x00: (buf, off) => {\r\n                return off;\r\n            },\r\n            /** Protocol Version Unsupported */\r\n            0x02: (buf, off) => {\r\n                checkBufLen(buf, off, 2);\r\n                var ver = `${buf[off++]}.${buf[off++]}`;\r\n                if (ver === \"2.0\") {\r\n                    this.reconnect = true;\r\n                    this.is2_0 = true;\r\n                    strLenIdent = numTo2Byte;\r\n                }\r\n                else\r\n                    this.conCallback(false, new Error(\"Unsupported protocol: \" + ver), this.is2_0);\r\n                return off;\r\n            },\r\n            /** Server Hello Complete */\r\n            0x03: (buf, off) => {\r\n                this.connected = true;\r\n                for (let key in this.oldEntries) {\r\n                    if (typeof this.entries[key] == 'undefined') {\r\n                        let old = this.oldEntries[key];\r\n                        this.Assign(old.val, old.name, old.flags > 0);\r\n                    }\r\n                }\r\n                if (this.is2_0) {\r\n                    this.afterConnect();\r\n                }\r\n                else {\r\n                    this.newKeyMap.map(e => {\r\n                        if (typeof this.keymap[e.name] == 'undefined') {\r\n                            this.Assign(e.val, e.name, e.flags > 0);\r\n                        }\r\n                    });\r\n                    this.toServer.HelloComplete();\r\n                    if (this.known) {\r\n                        while (this.updatedIDs.length > 0) {\r\n                            let e = this.updatedIDs.pop();\r\n                            if (typeof this.entries[e] != 'undefined')\r\n                                this.Update(e, this.entries[e].val);\r\n                        }\r\n                    }\r\n                }\r\n                return off;\r\n            },\r\n            /** Server Hello */\r\n            0x04: (buf, off) => {\r\n                checkBufLen(buf, off, 1);\r\n                let flags = this.is2_0 ? 0 : buf[off++];\r\n                this.known = flags > 0;\r\n                let sName = TypesFrom[2 /* String */](buf, off);\r\n                this.serverName = sName.val;\r\n                return sName.offset;\r\n            },\r\n            /** Entry Assignment */\r\n            0x10: (buf, off) => {\r\n                let keyName = TypesFrom[2 /* String */](buf, off);\r\n                off = keyName.offset;\r\n                checkBufLen(buf, off, 5 + (this.is2_0 ? 0 : 1));\r\n                let type = buf[off++], id = (buf[off++] << 8) + buf[off++], typeName = typeNames[type], key = keyName.val, entry = {\r\n                    typeID: type,\r\n                    name: key,\r\n                    sn: (buf[off++] << 8) + buf[off++],\r\n                    flags: this.is2_0 ? 0 : buf[off++]\r\n                };\r\n                let val = TypesFrom[entry.typeID](buf, off);\r\n                entry.val = val.val;\r\n                this.entries[id] = entry;\r\n                this.keymap[key] = id;\r\n                for (let i = 0; i < this.listeners.length; i++) {\r\n                    if (this.connected) {\r\n                        this.listeners[i](keyName.val, val.val, typeName, \"add\", id, entry.flags);\r\n                    }\r\n                    else {\r\n                        this.lateCallbacks.push(() => this.listeners[i](keyName.val, val.val, typeName, \"add\", id, entry.flags));\r\n                    }\r\n                }\r\n                if (typeof this.reAssign[key] != 'undefined') {\r\n                    let toUpdate = this.reAssign[key];\r\n                    this.Update(id, toUpdate.val);\r\n                    if (!this.is2_0 && entry.flags !== toUpdate.flags) {\r\n                        this.Flag(id, toUpdate.flags);\r\n                    }\r\n                    delete this.reAssign[key];\r\n                }\r\n                return val.offset;\r\n            },\r\n            /** Entry Update */\r\n            0x11: (buf, off) => {\r\n                checkBufLen(buf, off, 4 + (this.is2_0 ? 0 : 1));\r\n                let id = (buf[off++] << 8) + buf[off++], sn = (buf[off++] << 8) + buf[off++], type = this.is2_0 ? this.entries[id].typeID : buf[off++], val = TypesFrom[type](buf, off), typeName = typeNames[type], name = \"\";\r\n                if (typeof this.entries[id] != 'undefined' && type === this.entries[id].typeID) {\r\n                    let entry = this.entries[id];\r\n                    entry.sn = sn;\r\n                    entry.val = val.val;\r\n                    name = entry.name;\r\n                    for (let i = 0; i < this.listeners.length; i++) {\r\n                        if (this.connected) {\r\n                            this.listeners[i](name, val.val, typeName, \"update\", id, entry.flags);\r\n                        }\r\n                        else {\r\n                            this.lateCallbacks.push(() => this.listeners[i](name, val.val, typeName, \"update\", id, entry.flags));\r\n                        }\r\n                    }\r\n                }\r\n                return val.offset;\r\n            },\r\n            /** Entry Flags Update */\r\n            0x12: (buf, off) => {\r\n                checkBufLen(buf, off, 3);\r\n                let id = (buf[off++] << 8) + buf[off++], flags = buf[off++];\r\n                if (typeof this.entries[id] != 'undefined') {\r\n                    let entry = this.entries[id];\r\n                    entry.flags = flags;\r\n                    for (let i = 0; i < this.listeners.length; i++) {\r\n                        if (this.connected) {\r\n                            this.listeners[i](entry.name, entry.val, typeNames[entry.typeID], \"flagChange\", id, flags);\r\n                        }\r\n                        else {\r\n                            this.lateCallbacks.push(() => this.listeners[i](entry.name, entry.val, typeNames[entry.typeID], \"flagChange\", id, flags));\r\n                        }\r\n                    }\r\n                }\r\n                return off;\r\n            },\r\n            /** Entry Delete */\r\n            0x13: (buf, off) => {\r\n                checkBufLen(buf, off, 2);\r\n                let id = (buf[off++] << 8) + buf[off++], name = this.entries[id].name, typename = typeNames[this.entries[id].typeID], flags = this.entries[id].flags;\r\n                delete this.entries[id];\r\n                delete this.keymap[name];\r\n                for (let i = 0; i < this.listeners.length; i++) {\r\n                    if (this.connected) {\r\n                        this.listeners[i](name, null, typename, \"delete\", id, flags);\r\n                    }\r\n                    else {\r\n                        this.lateCallbacks.push(() => this.listeners[i](name, null, typename, \"delete\", id, flags));\r\n                    }\r\n                }\r\n                return off;\r\n            },\r\n            /** Clear All Entries */\r\n            0x14: (buf, off) => {\r\n                checkBufLen(buf, off, 4);\r\n                let val = 0;\r\n                for (let i = 0; i < 4; i++) {\r\n                    val = (val << 8) + buf[off + i];\r\n                }\r\n                if (val === 0xd06cb27a) {\r\n                    this.entries = {};\r\n                    this.keymap = {};\r\n                }\r\n                return off + 4;\r\n            },\r\n            /** RPC Response */\r\n            0x21: (buf, off) => {\r\n                checkBufLen(buf, off, 4);\r\n                let id = (buf[off++] << 8) + buf[off++], executeID = (buf[off++] << 8) + buf[off++], len = numFrom128(buf, off), res = this.entries[id].val.results, results = {}, s;\r\n                for (let i = 0; i < res.length; i++) {\r\n                    for (let i = 0; i < res.length; i++) {\r\n                        s = TypesFrom[res[i].typeId](buf, off);\r\n                        off = s.offset;\r\n                        results[res[i].name] = s.val;\r\n                    }\r\n                }\r\n                if (typeof this.RPCExecCallback[executeID] != 'undefined') {\r\n                    this.RPCExecCallback[executeID](results);\r\n                    delete this.RPCExecCallback[executeID];\r\n                }\r\n                return off;\r\n            }\r\n        };\r\n        this.toServer = {\r\n            Hello: (serverName) => {\r\n                if (this.is2_0) {\r\n                    this.write(toServer.hello2_0);\r\n                }\r\n                else {\r\n                    let s = TypeBuf[2 /* String */].toBuf(serverName), buf = buffer_1.Buffer.allocUnsafe(s.length + 3);\r\n                    buf[0] = 0x01;\r\n                    buf[1] = 3;\r\n                    buf[2] = 0;\r\n                    s.write(buf, 3);\r\n                    this.write(buf, true);\r\n                }\r\n            },\r\n            HelloComplete: () => {\r\n                this.write(toServer.helloComplete, true);\r\n                this.afterConnect();\r\n            }\r\n        };\r\n        this.keepAlive = buffer_1.Buffer.from([0]);\r\n        this.buffersToSend = [];\r\n        if (options == undefined)\r\n            return;\r\n        if (options.strictInput)\r\n            this.strictInput = true;\r\n    }\r\n    /**\r\n     * True if the Client has completed its hello and is connected\r\n     */\r\n    isConnected() {\r\n        return this.connected;\r\n    }\r\n    /**\r\n     * True if the client has switched to 2.0\r\n     */\r\n    uses2_0() {\r\n        return this.is2_0;\r\n    }\r\n    /**\r\n     * Start the Client\r\n     * @param callback Called on connect or error\r\n     * @param address Address of the Server. Default = \"localhost\"\r\n     * @param port Port of the Server. Default = 1735\r\n     */\r\n    start(callback, address = \"127.0.0.1\", port = 1735) {\r\n        this.connected = false;\r\n        this.address = address;\r\n        this.port = port;\r\n        this.conCallback = callback;\r\n        this.reAssign = {};\r\n        this.beingAssigned = [];\r\n        this.client = net\r\n            .connect(port, address, () => {\r\n            this.toServer.Hello(this.clientName);\r\n            this.client.on(\"data\", data => {\r\n                let pos = 0, buf = data;\r\n                if (this.continuation != null) {\r\n                    pos = this.continuation.offset;\r\n                    buf = buffer_1.Buffer.concat([this.continuation.buf, buf]);\r\n                    this.continuation = null;\r\n                }\r\n                try {\r\n                    this.read(buf, pos);\r\n                }\r\n                catch (e) {\r\n                    this.conCallback(true, e, this.is2_0);\r\n                }\r\n            });\r\n        })\r\n            .on(\"close\", hadError => {\r\n            this.connected = false;\r\n            this.oldEntries = this.entries;\r\n            this.entries = {};\r\n            this.keymap = {};\r\n            if (this.reconnect) {\r\n                this.start(callback, address, port);\r\n            }\r\n            else if (!hadError)\r\n                callback(false, null, this.is2_0);\r\n        })\r\n            .on(\"error\", err => callback(false, err, this.is2_0));\r\n    }\r\n    /**\r\n     * Adds and returns a Listener to be called on change of an Entry\r\n     * @param callback Listener\r\n     */\r\n    addListener(callback) {\r\n        this.listeners.push(callback);\r\n        return callback;\r\n    }\r\n    /**\r\n     * Removes a Listener\r\n     * @param listener the Listener to remove\r\n     */\r\n    removeListener(listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    }\r\n    getKeyID(key) {\r\n        if (key == undefined) {\r\n            return this.keymap;\r\n        }\r\n        else\r\n            return this.keymap[key];\r\n    }\r\n    /**\r\n     * Gets an Entry\r\n     * @param id ID of an Entry\r\n     */\r\n    getEntry(id) {\r\n        return this.entries[id];\r\n    }\r\n    /**\r\n     * Get an Array of Keys\r\n     */\r\n    getKeys() {\r\n        return Object.keys(this.keymap);\r\n    }\r\n    /**\r\n     * Get All of the Entries\r\n     */\r\n    getEntries() {\r\n        return this.entries;\r\n    }\r\n    read(buf, off) {\r\n        checkBufLen(buf, off, 1);\r\n        if (buf.length == off)\r\n            return;\r\n        if (typeof this.recProto[buf[off]] != 'undefined') {\r\n            try {\r\n                off = this.recProto[buf[off]](buf, off + 1);\r\n                this.read(buf, off);\r\n            }\r\n            catch (e) {\r\n                if (e instanceof LengthError) {\r\n                    this.continuation = { buf, offset: off };\r\n                    return;\r\n                }\r\n                else\r\n                    throw e;\r\n            }\r\n        }\r\n        else\r\n            throw new Error(\"Unknown Message Type \" + buf[off]);\r\n    }\r\n    afterConnect() {\r\n        this.conCallback(true, null, this.is2_0);\r\n        while (this.lateCallbacks.length) {\r\n            this.lateCallbacks.shift()();\r\n        }\r\n    }\r\n    /**\r\n     * Add an Entry\r\n     * @param val The Value\r\n     * @param name The Key of the Entry\r\n     * @param persist Whether the Value should persist on the server through a restart\r\n     */\r\n    Assign(val, name, persist = false) {\r\n        let type = getType(val);\r\n        if (this.is2_0 && type === 3 /* RawData */)\r\n            return new Error(\"2.0 does not have Raw Data\");\r\n        if (type === 32 /* RPC */)\r\n            return new Error(\"Clients can not assign an RPC\");\r\n        if (!this.connected) {\r\n            let nID = this.newKeyMap.length;\r\n            this.newKeyMap[nID] = {\r\n                typeID: type,\r\n                val,\r\n                flags: +persist,\r\n                name: name\r\n            };\r\n            this.listeners.map(e => e(name, val, typeNames[type], \"add\", -nID - 1, +persist));\r\n            return;\r\n        }\r\n        if (typeof this.keymap[name] != 'undefined') {\r\n            return this.Update(this.keymap[name], val);\r\n        }\r\n        if (this.beingAssigned.indexOf(name) >= 0) {\r\n            this.reAssign[name] = { val, flags: +persist };\r\n            return;\r\n        }\r\n        else {\r\n            this.beingAssigned.push(name);\r\n        }\r\n        let n = TypeBuf[2 /* String */].toBuf(name), f = TypeBuf[type].toBuf(val), nlen = n.length, assignLen = this.is2_0 ? 6 : 7, len = f.length + nlen + assignLen, buf = buffer_1.Buffer.allocUnsafe(len);\r\n        buf[0] = 0x10;\r\n        n.write(buf, 1);\r\n        buf[nlen + 1] = type;\r\n        buf[nlen + 2] = 0xff;\r\n        buf[nlen + 3] = 0xff;\r\n        buf[nlen + 4] = 0;\r\n        buf[nlen + 5] = 0;\r\n        if (!this.is2_0)\r\n            buf[nlen + 6] = +persist;\r\n        f.write(buf, nlen + assignLen);\r\n        this.write(buf);\r\n    }\r\n    /**\r\n     * Updates an Entry\r\n     * @param id The ID of the Entry\r\n     * @param val The value of the Entry\r\n     */\r\n    Update(id, val) {\r\n        if (id < 0) {\r\n            let nEntry = this.newKeyMap[-id - 1];\r\n            let testVal = this.fixType(val, nEntry.typeID);\r\n            if (testVal != null) {\r\n                val = testVal;\r\n                if (this.connected) {\r\n                    if (typeof this.keymap[nEntry.name] != 'undefined') {\r\n                        id = this.keymap[nEntry.name];\r\n                    }\r\n                    else {\r\n                        return this.Assign(val, nEntry.name, nEntry.flags > 0);\r\n                    }\r\n                }\r\n                else {\r\n                    nEntry.val = val;\r\n                    this.listeners.map(e => e(nEntry.name, val, typeNames[nEntry.typeID], \"update\", id, nEntry.val));\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n                return new Error(`Wrong Type: ${val} is not a ${typeNames[nEntry.typeID]}`);\r\n        }\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"ID not found\");\r\n        let entry = this.entries[id], testVal = this.fixType(val, entry.typeID);\r\n        if (testVal == null)\r\n            return new Error(`Wrong Type: ${val} is not a ${typeNames[entry.typeID]}`);\r\n        val = entry.val = testVal;\r\n        entry.sn++;\r\n        if (!this.connected) {\r\n            if (this.updatedIDs.indexOf(id) < 0)\r\n                this.updatedIDs.push(id);\r\n            this.listeners.map(e => e(entry.name, val, typeNames[entry.typeID], \"update\", id, entry.flags));\r\n            return;\r\n        }\r\n        let f = TypeBuf[entry.typeID].toBuf(val), updateLen = this.is2_0 ? 5 : 6, len = f.length + updateLen, buf = buffer_1.Buffer.allocUnsafe(len);\r\n        buf[0] = 0x11;\r\n        buf[1] = id >> 8;\r\n        buf[2] = id & 0xff;\r\n        buf[3] = entry.sn >> 8;\r\n        buf[4] = entry.sn & 0xff;\r\n        if (!this.is2_0)\r\n            buf[5] = entry.typeID;\r\n        f.write(buf, updateLen);\r\n        this.write(buf);\r\n        this.listeners.map(e => e(entry.name, val, typeNames[entry.typeID], \"update\", id, entry.flags));\r\n    }\r\n    /**\r\n     * Updates the Flag of an Entry\r\n     * @param id The ID of the Entry\r\n     * @param flags Whether the Entry should persist through a restart on the server\r\n     */\r\n    Flag(id, flags = false) {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support flags\");\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"Does not exist\");\r\n        this.write(buffer_1.Buffer.from([0x12, id >> 8, id & 0xff, +flags]));\r\n    }\r\n    /**\r\n     * Deletes an Entry\r\n     * @param id The ID of the Entry\r\n     */\r\n    Delete(id) {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support delete\");\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"Does not exist\");\r\n        this.write(buffer_1.Buffer.from([0x13, id >> 8, id & 0xff]));\r\n    }\r\n    /**\r\n     * Deletes All Entries\r\n     */\r\n    DeleteAll() {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support delete\");\r\n        this.write(toServer.deleteAll);\r\n        this.entries = {};\r\n        this.keymap = {};\r\n    }\r\n    /**\r\n     * Executes an RPC\r\n     * @param id The ID of the RPC Entry\r\n     * @param val The Values of the Parameters\r\n     * @param callback To be called with the Results\r\n     */\r\n    RPCExec(id, val, callback) {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support RPC\");\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"Does not exist\");\r\n        let entry = this.entries[id];\r\n        if (entry.typeID !== 32 /* RPC */)\r\n            return new Error(\"Is not an RPC\");\r\n        let par = entry.val.par, f = [], value, len = 0, parName = \"\";\r\n        for (let i = 0; i < par.length; i++) {\r\n            parName = par[i].name;\r\n            value = typeof val[parName] != 'undefined' ? val[parName] : par[i].default;\r\n            let testVal = this.fixType(value, par[i].typeId);\r\n            if (testVal == null)\r\n                return new Error(`Wrong Type: ${value} is not a ${typeNames[par[i].typeId]}`);\r\n            let n = TypeBuf[par[i].typeId].toBuf(testVal);\r\n            len += n.length;\r\n            f.push(n);\r\n        }\r\n        let encLen = numTo128(len), buf = buffer_1.Buffer.allocUnsafe(len + encLen.length + 5), off = 5 + encLen.length, randId = Math.floor(Math.random() * 0xffff);\r\n        buf[0] = 0x21;\r\n        buf[1] = id >> 8;\r\n        buf[2] = id & 0xff;\r\n        buf[3] = randId >> 8;\r\n        buf[4] = randId & 0xff;\r\n        encLen.copy(buf, 5);\r\n        for (let i = 0; i < f.length; i++) {\r\n            f[i].write(buf, off);\r\n            off += f[i].length;\r\n        }\r\n        this.write(buf);\r\n        this.RPCExecCallback[randId] = callback;\r\n    }\r\n    /**\r\n     * Direct Write to the Server\r\n     * @param buf The Buffer to be sent\r\n     * @param immediate whether the write should happen right away\r\n     */\r\n    write(buf, immediate = false) {\r\n        if (this.aliveTimer)\r\n            clearTimeout(this.aliveTimer);\r\n        this.aliveTimer = setTimeout(() => {\r\n            this.write(this.keepAlive);\r\n        }, 1000);\r\n        if (this.aliveTimer.unref)\r\n            this.aliveTimer.unref();\r\n        if (immediate)\r\n            this.client.write(buf);\r\n        else {\r\n            this.buffersToSend.push(buf);\r\n            if (!this.bufferTimer)\r\n                this.bufferTimer = setTimeout(() => {\r\n                    this.client.write(buffer_1.Buffer.concat(this.buffersToSend));\r\n                    this.bufferTimer = null;\r\n                }, 20);\r\n        }\r\n    }\r\n    fixType(val, type) {\r\n        if (Array.isArray(val)) {\r\n            if (type === 16 /* BoolArray */) {\r\n                if (val.every(e => typeof e === \"boolean\"))\r\n                    return val;\r\n                else if (!this.strictInput) {\r\n                    let tryVal = [];\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        if (val[i] == \"true\" || val[i] == \"false\")\r\n                            tryVal.push(val[i] == \"true\");\r\n                        else\r\n                            return;\r\n                    }\r\n                    return tryVal;\r\n                }\r\n            }\r\n            else if (type === 17 /* DoubleArray */) {\r\n                if (val.every(e => typeof e === \"number\")) {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput) {\r\n                    let tryVal = [];\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        let testVal = parseFloat(val[i]);\r\n                        if (Number.isNaN(testVal))\r\n                            return;\r\n                        else\r\n                            tryVal.push(testVal);\r\n                    }\r\n                    return tryVal;\r\n                }\r\n            }\r\n            else if (type === 18 /* StringArray */) {\r\n                if (val.every(e => typeof e === \"string\")) {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput) {\r\n                    return val.map(a => a.toString());\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (type === 0 /* Boolean */) {\r\n                if (typeof val === \"boolean\") {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput &&\r\n                    (val == \"true\" || val == \"false\")) {\r\n                    return val == \"true\";\r\n                }\r\n            }\r\n            else if (type === 1 /* Double */) {\r\n                if (typeof val === \"number\") {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput) {\r\n                    let testVal = parseFloat(val);\r\n                    if (!Number.isNaN(testVal)) {\r\n                        return testVal;\r\n                    }\r\n                }\r\n            }\r\n            else if (type === 2 /* String */) {\r\n                if (!this.strictInput || typeof val == \"string\")\r\n                    return val.toString();\r\n            }\r\n            else if (type === 3 /* RawData */ && buffer_1.Buffer.isBuffer(val))\r\n                return val;\r\n        }\r\n        if (type === 3 /* RawData */ && !this.strictInput) {\r\n            if (typeof val == \"number\" &&\r\n                val <= 0xff &&\r\n                val >= 0 &&\r\n                Number.isInteger(val)) {\r\n                return buffer_1.Buffer.from([val]);\r\n            }\r\n            else if (Array.isArray(val) &&\r\n                val.every(a => typeof a == \"number\" &&\r\n                    a >= 0 &&\r\n                    a <= 0xff &&\r\n                    Number.isInteger(a))) {\r\n                return buffer_1.Buffer.from(val);\r\n            }\r\n            else if (typeof val == \"string\") {\r\n                return buffer_1.Buffer.from(val);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Client = Client;\r\nconst typeNames = {\r\n    0x00: \"Boolean\",\r\n    0x01: \"Number\",\r\n    0x02: \"String\",\r\n    0x03: \"Buffer\",\r\n    0x10: \"BooleanArray\",\r\n    0x11: \"NumberArray\",\r\n    0x12: \"StringArray\",\r\n    0x20: \"RPC\"\r\n};\r\nfunction checkTypeI(val, type) {\r\n    if (Array.isArray(val)) {\r\n        if (type === 16 /* BoolArray */ && val.every(e => typeof e === \"boolean\"))\r\n            return true;\r\n        else if (type === 17 /* DoubleArray */ &&\r\n            val.every(e => typeof e === \"number\"))\r\n            return true;\r\n        else if (type === 18 /* StringArray */ &&\r\n            val.every(e => typeof e === \"string\"))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    else {\r\n        if (type === 0 /* Boolean */ && typeof val === \"boolean\")\r\n            return true;\r\n        else if (type === 1 /* Double */ && typeof val === \"number\")\r\n            return true;\r\n        else if (type === 2 /* String */ && typeof val === \"string\")\r\n            return true;\r\n        else if (type === 3 /* RawData */ && buffer_1.Buffer.isBuffer(val))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n}\r\nfunction getType(val) {\r\n    if (Array.isArray(val)) {\r\n        if (typeof val[0] === \"boolean\")\r\n            return 0x10;\r\n        else if (typeof val[0] === \"number\")\r\n            return 0x11;\r\n        else if (typeof val[0] === \"string\")\r\n            return 0x12;\r\n        else if (typeof val[0] === \"object\")\r\n            return 0x20;\r\n    }\r\n    else {\r\n        if (typeof val === \"boolean\")\r\n            return 0x00;\r\n        else if (typeof val === \"number\")\r\n            return 0x01;\r\n        else if (typeof val === \"string\")\r\n            return 0x02;\r\n        else if (buffer_1.Buffer.isBuffer(val))\r\n            return 0x03;\r\n    }\r\n}\r\nconst toServer = {\r\n    helloComplete: buffer_1.Buffer.from([0x05]),\r\n    deleteAll: buffer_1.Buffer.from([0x14, 0xd0, 0x6c, 0xb2, 0x7a]),\r\n    hello2_0: buffer_1.Buffer.from([0x01, 2, 0])\r\n};\r\nconst TypeBuf = {\r\n    0x00: {\r\n        toBuf: val => {\r\n            return {\r\n                length: 1,\r\n                write: (buf, off) => {\r\n                    buf[off] = +val;\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            return {\r\n                offset: off + 1,\r\n                val: buf[off] > 0\r\n            };\r\n        }\r\n    },\r\n    0x01: {\r\n        toBuf: val => {\r\n            return {\r\n                length: 8,\r\n                write: (buf, off) => {\r\n                    ieee754.write(buf, val, off, false, 52, 8);\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 8);\r\n            return {\r\n                offset: off + 8,\r\n                val: ieee754.read(buf, off, false, 52, 8)\r\n            };\r\n        }\r\n    },\r\n    0x02: {\r\n        toBuf: val => {\r\n            let bufT = buffer_1.Buffer.concat([\r\n                strLenIdent(val.length),\r\n                buffer_1.Buffer.from(val, \"utf8\")\r\n            ]);\r\n            return {\r\n                length: bufT.length,\r\n                write: (buf, off) => {\r\n                    bufT.copy(buf, off);\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            return fromLEBuf(buf, off);\r\n        }\r\n    },\r\n    0x03: {\r\n        toBuf: val => {\r\n            let len = numTo128(val.length);\r\n            return {\r\n                length: val.length + len.length,\r\n                write: (buf, off) => {\r\n                    len.copy(buf, off);\r\n                    val.copy(buf, off + len.length);\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            let { val, offset } = numFrom128(buf, off), nbuf = buffer_1.Buffer.allocUnsafe(val), end = offset + val;\r\n            checkBufLen(buf, off, val);\r\n            buf.copy(nbuf, 0, offset);\r\n            return {\r\n                offset: end,\r\n                val: nbuf\r\n            };\r\n        }\r\n    },\r\n    0x10: {\r\n        toBuf: val => {\r\n            return {\r\n                length: val.length + 1,\r\n                write: (buf, off) => {\r\n                    buf[off] = val.length;\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        buf[off + i] = +val[i];\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let len = buf[off], res = [];\r\n            off++;\r\n            checkBufLen(buf, off, len);\r\n            for (let i = 0; i < len; i++) {\r\n                res.push(buf[off + i] > 0);\r\n            }\r\n            return {\r\n                offset: off + len,\r\n                val: res\r\n            };\r\n        }\r\n    },\r\n    0x11: {\r\n        toBuf: val => {\r\n            let len = val.length;\r\n            return {\r\n                length: 8 * val.length + 1,\r\n                write: (buf, off) => {\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        buf[off] = val.length;\r\n                        off++;\r\n                        ieee754.write(buf, val[i], off + 8 * i, false, 52, 8);\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let val = buf[off], num = [];\r\n            off++;\r\n            checkBufLen(buf, off, 8 * val);\r\n            for (let i = 0; i < val; i++) {\r\n                num.push(ieee754.read(buf, off + i * 8, false, 52, 8));\r\n            }\r\n            return {\r\n                offset: off + val * 8,\r\n                val: num\r\n            };\r\n        }\r\n    },\r\n    0x12: {\r\n        toBuf: val => {\r\n            let lens = [], len = 1;\r\n            for (let i = 0; i < val.length; i++) {\r\n                lens[i] = buffer_1.Buffer.concat([\r\n                    strLenIdent(val[i].length),\r\n                    buffer_1.Buffer.from(val[i])\r\n                ]);\r\n                len += lens[i].length;\r\n            }\r\n            return {\r\n                length: len,\r\n                write: (buf, off) => {\r\n                    buf[off] = val.length;\r\n                    off++;\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        lens[i].copy(buf, off);\r\n                        off += lens[i].length;\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let len = buf[off], s = [], st;\r\n            off++;\r\n            for (let i = 0; i < len; i++) {\r\n                st = fromLEBuf(buf, off);\r\n                s[i] = st.val;\r\n                off = st.offset;\r\n            }\r\n            return {\r\n                offset: off,\r\n                val: s\r\n            };\r\n        }\r\n    },\r\n    0x20: {\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let st;\r\n            if (buf[off] !== 1)\r\n                throw new Error(\"Unsupported RPC Definition\");\r\n            off++;\r\n            st = fromLEBuf(buf, off);\r\n            off = st.offset;\r\n            checkBufLen(buf, off, 1);\r\n            let name = st.val, parNum = buf[off], par = [], results = [], s = { offset: 0, val: \"\" }, resNum = 0;\r\n            off++;\r\n            for (let i = 0; i < parNum; i++) {\r\n                let lastPar = {\r\n                    typeId: 0,\r\n                    typeName: \"\",\r\n                    name: \"\",\r\n                    default: 0\r\n                };\r\n                checkBufLen(buf, off, 1);\r\n                lastPar.typeId = buf[off];\r\n                lastPar.typeName = typeNames[lastPar.typeId];\r\n                s = fromLEBuf(buf, off);\r\n                lastPar.name = s.val;\r\n                off = s.offset;\r\n                let t = TypesFrom[lastPar.typeId](buf, off);\r\n                lastPar.default = t.val;\r\n                off = t.offset;\r\n                par.push(lastPar);\r\n            }\r\n            checkBufLen(buf, off, 1);\r\n            resNum = buf[off++];\r\n            for (let i = 0; i < resNum; i++) {\r\n                let res = { typeId: 0, typeName: \"\", name: \"\" };\r\n                checkBufLen(buf, off, 1);\r\n                res.typeId = buf[off];\r\n                res.typeName = typeNames[res.typeId];\r\n                s = fromLEBuf(buf, off + 1);\r\n                res.name = s.val;\r\n                off = s.offset;\r\n                results.push(res);\r\n            }\r\n            return {\r\n                offset: off,\r\n                val: {\r\n                    name,\r\n                    par,\r\n                    results\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nvar TypesFrom = {\r\n    0x00: TypeBuf[0 /* Boolean */].fromBuf,\r\n    0x01: TypeBuf[1 /* Double */].fromBuf,\r\n    0x02: TypeBuf[2 /* String */].fromBuf,\r\n    0x03: TypeBuf[3 /* RawData */].fromBuf,\r\n    0x10: TypeBuf[16 /* BoolArray */].fromBuf,\r\n    0x11: TypeBuf[17 /* DoubleArray */].fromBuf,\r\n    0x12: TypeBuf[18 /* StringArray */].fromBuf,\r\n    0x20: TypeBuf[32 /* RPC */].fromBuf\r\n    //0x21: TypeBuf[e.Byte].fromBuf\r\n};\r\n/**\r\n * Decodes String where first bytes are length encoded using LEB128\r\n * @param buf Buffer to red from\r\n * @param offset position to start reading from\r\n * @throws LengthError\r\n */\r\nfunction fromLEBuf(buf, offset) {\r\n    let res = numFrom128(buf, offset), end = res.offset + res.val;\r\n    checkBufLen(buf, res.offset, res.val);\r\n    return { offset: end, val: buf.slice(res.offset, end).toString(\"utf8\") };\r\n}\r\nfunction numTo128(num) {\r\n    let n = num;\r\n    let r = [];\r\n    while (n > 0x07f) {\r\n        r.push((n & 0x7f) | 0x80);\r\n        n = n >> 7;\r\n    }\r\n    r.push(n);\r\n    return buffer_1.Buffer.from(r);\r\n}\r\nfunction numTo2Byte(num) {\r\n    return buffer_1.Buffer.from([(this >> 8) & 0xff, this & 0xff]);\r\n}\r\n/**\r\n * Decodes a number encoded in LEB128\r\n * @param buf Buffer to red from\r\n * @param offset position to start reading from\r\n * @throws LengthError\r\n */\r\nfunction numFrom128(buf, offset) {\r\n    let r = 0, n = buf[offset];\r\n    offset++;\r\n    r = n & 0x7f;\r\n    while (n > 0x7f) {\r\n        checkBufLen(buf, offset, 1);\r\n        n = buf[offset];\r\n        r = (r << 7) + (n & 0x7f);\r\n        offset++;\r\n    }\r\n    return {\r\n        val: r,\r\n        offset\r\n    };\r\n}\r\n/**\r\n * Error thrown when buffer is too short\r\n */\r\nclass LengthError extends Error {\r\n    constructor(mesg, pos = 0, length = 1) {\r\n        if (typeof mesg !== \"string\") {\r\n            super(`Trying to read ${length} bytes from position ${pos} of a buffer that is ${mesg.length} long`);\r\n            this.buf = mesg;\r\n            this.position = pos;\r\n        }\r\n        else\r\n            super(mesg);\r\n    }\r\n}\r\nexports.LengthError = LengthError;\r\n/**\r\n * Check if the Buffer is long enought\r\n * @param buf Buffer to check the length of\r\n * @param start Position to read from\r\n * @param length Number of bytes that will be read\r\n * @throws LengthError\r\n */\r\nfunction checkBufLen(buf, start, length) {\r\n    if (buf.length < start + length - 1)\r\n        throw new LengthError(buf, start, length);\r\n}\r\n"},{"id":7,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ieee754/index.js","name":"./node_modules/ieee754/index.js","index":8,"index2":5,"size":2054,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","issuerId":6,"issuerName":"./node_modules/wpilib-nt-client/index.js","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":6,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","module":"./node_modules/wpilib-nt-client/index.js","moduleName":"./node_modules/wpilib-nt-client/index.js","type":"cjs require","userRequest":"ieee754","loc":"3:16-34"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3,"source":"exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"},{"id":8,"identifier":"external \"net\"","name":"external \"net\"","index":9,"index2":6,"size":42,"cacheable":false,"built":false,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","issuerId":6,"issuerName":"./node_modules/wpilib-nt-client/index.js","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":6,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","module":"./node_modules/wpilib-nt-client/index.js","moduleName":"./node_modules/wpilib-nt-client/index.js","type":"cjs require","userRequest":"net","loc":"4:12-26"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3},{"id":9,"identifier":"external \"buffer\"","name":"external \"buffer\"","index":10,"index2":7,"size":42,"cacheable":false,"built":false,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","issuerId":6,"issuerName":"./node_modules/wpilib-nt-client/index.js","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":6,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","module":"./node_modules/wpilib-nt-client/index.js","moduleName":"./node_modules/wpilib-nt-client/index.js","type":"cjs require","userRequest":"buffer","loc":"5:17-34"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3},{"id":10,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/file-loader/dist/cjs.js??ref--4-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/reshape-loader/lib/index.js??ref--4-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.sgr","name":"./src/index.sgr","index":11,"index2":10,"size":56,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":["index.html"],"issuer":"multi ./index.tsx ./index.sgr","issuerId":1,"issuerName":"multi ./index.tsx ./index.sgr","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":1,"moduleIdentifier":"multi ./index.tsx ./index.sgr","module":"multi ./index.tsx ./index.sgr","moduleName":"multi ./index.tsx ./index.sgr","type":"single entry","userRequest":"./index.sgr","loc":"main:100001"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"module.exports = __webpack_public_path__ + \"index.html\";"}],"filteredModules":0,"origins":[{"moduleId":1,"module":"multi ./index.tsx ./index.sgr","moduleIdentifier":"multi ./index.tsx ./index.sgr","moduleName":"multi ./index.tsx ./index.sgr","loc":"","name":"main","reasons":[]}]}],"modules":[{"id":0,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/preact/dist/preact.esm.js","name":"./node_modules/preact/dist/preact.esm.js","index":2,"index2":0,"size":31478,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"preact","loc":"166:15-32"},{"moduleId":3,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","module":"./src/components/robot-map/index.tsx","moduleName":"./src/components/robot-map/index.tsx","type":"cjs require","userRequest":"preact","loc":"5:15-32"}],"usedExports":true,"providedExports":["h","createElement","cloneElement","Component","render","rerender","options","default"],"optimizationBailout":["ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/components/robot-map/index.tsx (referenced with cjs require), ./src/index.tsx (referenced with cjs require)"],"depth":2,"source":"/** Virtual DOM Node */\nfunction VNode() {}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nvar options = {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n  *\t@name syncComponentUpdates\n  *\t@type Boolean\n  *\t@default true\n  */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n  *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n  */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virutal DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\n// DOM properties that should NOT have \"px\" added when numeric\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n/** Managed queue of dirty components to be re-rendered */\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p,\n\t    list = items;\n\titems = [];\n\twhile (p = list.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hyrdating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nfunction isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined;\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName;\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nfunction isNamedNode(node, nodeName) {\n  return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nfunction getNodeProps(vnode) {\n  var props = extend({}, vnode.attributes);\n  props.children = vnode.children;\n\n  var defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (var i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {\n\t\t// ignore\n\t} else if (name === 'ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value == null ? '' : value);\n\t\tif (value == null || value === false) node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink\\:?/, ''));\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nvar mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nvar diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nvar isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nvar hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.pop()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\t// If the VNode represents a Component, perform a component diff:\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t} // if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t} else {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nvar components = {};\n\n/** Reclaim a component for later re-use by the recycler. */\nfunction collectComponent(component) {\n\tvar name = component.constructor.name;\n\t(components[name] || (components[name] = [])).push(component);\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nfunction createComponent(Ctor, props, context) {\n\tvar list = components[Ctor.name],\n\t    inst;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\tif (list) {\n\t\tfor (var i = list.length; i--;) {\n\t\t\tif (list[i].constructor === Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif (component.__ref = props.ref) delete props.ref;\n\tif (component.__key = props.key) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t} else if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts !== 0) {\n\t\tif (opts === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\t\t\t// set up high order component link\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t} else if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tif (component._renderCallbacks != null) {\n\t\twhile (component._renderCallbacks.length) {\n\t\t\tcomponent._renderCallbacks.pop().call(component);\n\t\t}\n\t}\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\tcollectComponent(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.context = context;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.props = props;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.state = this.state || {};\n}\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n  *\t@param {object} nextProps\n  *\t@param {object} nextState\n  *\t@param {object} nextContext\n  *\t@returns {Boolean} should the component re-render\n  *\t@name shouldComponentUpdate\n  *\t@function\n  */\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n  *\t@param {object} state\t\tA hash of state properties to update with new values\n  *\t@param {function} callback\tA function to be called once component state is updated\n  */\n\tsetState: function setState(state, callback) {\n\t\tvar s = this.state;\n\t\tif (!this.prevState) this.prevState = extend({}, s);\n\t\textend(s, typeof state === 'function' ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n  *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n  *\t@private\n  */\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n  *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n  *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n  *\t@param {object} state\t\tThe component's current state\n  *\t@param {object} context\t\tContext object (if a parent component has provided context)\n  *\t@returns VNode\n  */\n\trender: function render() {}\n});\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport { h, h as createElement, cloneElement, Component, render, rerender, options };\nexport default preact;\n//# sourceMappingURL=preact.esm.js.map\n"},{"id":1,"identifier":"multi ./index.tsx ./index.sgr","name":"multi ./index.tsx ./index.sgr","index":0,"index2":11,"size":40,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":null,"issuerId":null,"issuerName":null,"failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":0},{"id":2,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","name":"./src/index.tsx","index":1,"index2":9,"size":5942,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"multi ./index.tsx ./index.sgr","issuerId":1,"issuerName":"multi ./index.tsx ./index.sgr","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":1,"moduleIdentifier":"multi ./index.tsx ./index.sgr","module":"multi ./index.tsx ./index.sgr","moduleName":"multi ./index.tsx ./index.sgr","type":"single entry","userRequest":"./index.tsx","loc":"main:100000"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nexports.__esModule = true;\n\nvar preact_1 = require(\"preact\");\n\nvar robot_map_1 = require(\"./components/robot-map\");\n\nrequire(\"./style\");\n\nvar wpilib_nt_client_1 = require(\"wpilib-nt-client\");\n\nvar client = new wpilib_nt_client_1.Client();\n\nvar connect = function connect(address) {\n  return new Promise(function (resolve) {\n    client.start(function (con, err) {\n      resolve(con);\n    }, address, 1735);\n  });\n};\n\nvar handle = function handle(options) {\n  return function (key, value) {\n    options[key] ? options[key](value) : console.log(key);\n  };\n};\n\nvar Main =\n/** @class */\nfunction (_super) {\n  __extends(Main, _super);\n\n  function Main() {\n    var _this = _super.call(this) || this;\n\n    _this.setupNT = function () {\n      setInterval(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.setState({\n              connected: client.isConnected()\n            });\n\n            if (!this.state.connected) {\n              connect(this.state.address);\n            }\n\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }, 200);\n    };\n\n    _this.state = {\n      angle: 0,\n      x: 0,\n      y: 0,\n      connected: false,\n      path: [],\n      address: 'localhost'\n    };\n    return _this;\n  }\n\n  Main.prototype.componentWillMount = function () {\n    var _this = this;\n\n    this.setupNT();\n    client.addListener(handle({\n      '/path_tracking/robot_state/rotation': function path_trackingRobot_stateRotation(a) {\n        return _this.setState({\n          angle: a - Math.PI / 2\n        });\n      },\n      '/path_tracking/robot_state/x': function path_trackingRobot_stateX(x) {\n        return _this.setState({\n          x: x\n        });\n      },\n      '/path_tracking/robot_state/y': function path_trackingRobot_stateY(y) {\n        return _this.setState({\n          y: y\n        });\n      },\n      '/path_tracking/path': function path_trackingPath(p) {\n        return _this.setState({\n          path: JSON.parse(p)\n        });\n      }\n    }));\n  };\n\n  Main.prototype.render = function (_, _a) {\n    var x = _a.x,\n        y = _a.y,\n        angle = _a.angle,\n        path = _a.path;\n    console.log(path);\n    return preact_1.h(\"div\", null, preact_1.h(robot_map_1[\"default\"], {\n      x: x,\n      y: y,\n      angle: angle,\n      path: path\n    }), preact_1.h(\"h2\", null, this.state.connected ? 'Connected' : 'Disconnected'));\n  };\n\n  return Main;\n}(preact_1.Component);\n\npreact_1.render(preact_1.h(Main, null), document.body);"},{"id":3,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","name":"./src/components/robot-map/index.tsx","index":3,"index2":3,"size":653,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"./components/robot-map","loc":"168:18-51"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":2,"source":"\"use strict\";\n\nexports.__esModule = true;\n\nvar preact_1 = require(\"preact\");\n\nrequire(\"./style\");\n\nvar RobotMap = function RobotMap(_a) {\n  var x = _a.x,\n      y = _a.y,\n      angle = _a.angle,\n      path = _a.path;\n  return preact_1.h(\"div\", {\n    \"class\": \"g-robot-map\"\n  }, preact_1.h(\"div\", {\n    \"class\": \"robot\",\n    style: {\n      transform: \"\\ntranslate(\" + (x - 1) + \"em, \" + (54 - y - 1.5) + \"em)\\nrotate(\" + -angle + \"rad)\"\n    }\n  }), path.map(function (p) {\n    return preact_1.h(\"div\", {\n      \"class\": \"point\",\n      style: {\n        left: p[0] + \"em\",\n        bottom: p[1] + \"em\"\n      }\n    });\n  }));\n};\n\nexports[\"default\"] = RobotMap;"},{"id":4,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/es6-extract-text-webpack-plugin/dist/loader.js??ref--2-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js??ref--2-2!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","name":"./src/components/robot-map/style.sss","index":4,"index2":2,"size":245,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","issuerId":3,"issuerName":"./src/components/robot-map/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":3,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/index.tsx","module":"./src/components/robot-map/index.tsx","moduleName":"./src/components/robot-map/index.tsx","type":"cjs require","userRequest":"./style","loc":"7:0-18"}],"usedExports":true,"providedExports":["default","gRobotMap","robot","point"],"optimizationBailout":["ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/components/robot-map/index.tsx (referenced with cjs require)"],"depth":3,"source":"// removed by extract-text-webpack-plugin\nexport default {\"g-robot-map\":\"g-robot-map\",\"gRobotMap\":\"g-robot-map\",\"robot\":\"robot\",\"point\":\"point\"};\nexport const gRobotMap = \"g-robot-map\";\nexport const robot = \"robot\";\nexport const point = \"point\";"},{"id":5,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/es6-extract-text-webpack-plugin/dist/loader.js??ref--2-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js??ref--2-2!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","name":"./src/style.sss","index":6,"index2":4,"size":41,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"./style","loc":"170:0-18"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":2,"source":"// removed by extract-text-webpack-plugin"},{"id":6,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","name":"./node_modules/wpilib-nt-client/index.js","index":7,"index2":8,"size":35616,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","issuerId":2,"issuerName":"./src/index.tsx","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":2,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/babel-loader/lib/index.js??ref--1-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ts-loader/index.js!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.tsx","module":"./src/index.tsx","moduleName":"./src/index.tsx","type":"cjs require","userRequest":"wpilib-nt-client","loc":"172:25-52"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":2,"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ieee754 = require(\"ieee754\");\r\nconst net = require(\"net\");\r\nconst buffer_1 = require(\"buffer\");\r\nvar strLenIdent = numTo128;\r\nclass Client {\r\n    constructor(options) {\r\n        this.clientName = \"NodeJS\" + Date.now();\r\n        this.connected = false;\r\n        this.entries = {};\r\n        this.oldEntries = {};\r\n        this.keymap = {};\r\n        this.newKeyMap = [];\r\n        this.updatedIDs = [];\r\n        this.reconnect = false;\r\n        this.known = false;\r\n        this.listeners = [];\r\n        this.RPCExecCallback = {};\r\n        this.lateCallbacks = [];\r\n        this.is2_0 = false;\r\n        this.reAssign = {};\r\n        this.beingAssigned = [];\r\n        this.strictInput = false;\r\n        this.recProto = {\r\n            /** Keep Alive */\r\n            0x00: (buf, off) => {\r\n                return off;\r\n            },\r\n            /** Protocol Version Unsupported */\r\n            0x02: (buf, off) => {\r\n                checkBufLen(buf, off, 2);\r\n                var ver = `${buf[off++]}.${buf[off++]}`;\r\n                if (ver === \"2.0\") {\r\n                    this.reconnect = true;\r\n                    this.is2_0 = true;\r\n                    strLenIdent = numTo2Byte;\r\n                }\r\n                else\r\n                    this.conCallback(false, new Error(\"Unsupported protocol: \" + ver), this.is2_0);\r\n                return off;\r\n            },\r\n            /** Server Hello Complete */\r\n            0x03: (buf, off) => {\r\n                this.connected = true;\r\n                for (let key in this.oldEntries) {\r\n                    if (typeof this.entries[key] == 'undefined') {\r\n                        let old = this.oldEntries[key];\r\n                        this.Assign(old.val, old.name, old.flags > 0);\r\n                    }\r\n                }\r\n                if (this.is2_0) {\r\n                    this.afterConnect();\r\n                }\r\n                else {\r\n                    this.newKeyMap.map(e => {\r\n                        if (typeof this.keymap[e.name] == 'undefined') {\r\n                            this.Assign(e.val, e.name, e.flags > 0);\r\n                        }\r\n                    });\r\n                    this.toServer.HelloComplete();\r\n                    if (this.known) {\r\n                        while (this.updatedIDs.length > 0) {\r\n                            let e = this.updatedIDs.pop();\r\n                            if (typeof this.entries[e] != 'undefined')\r\n                                this.Update(e, this.entries[e].val);\r\n                        }\r\n                    }\r\n                }\r\n                return off;\r\n            },\r\n            /** Server Hello */\r\n            0x04: (buf, off) => {\r\n                checkBufLen(buf, off, 1);\r\n                let flags = this.is2_0 ? 0 : buf[off++];\r\n                this.known = flags > 0;\r\n                let sName = TypesFrom[2 /* String */](buf, off);\r\n                this.serverName = sName.val;\r\n                return sName.offset;\r\n            },\r\n            /** Entry Assignment */\r\n            0x10: (buf, off) => {\r\n                let keyName = TypesFrom[2 /* String */](buf, off);\r\n                off = keyName.offset;\r\n                checkBufLen(buf, off, 5 + (this.is2_0 ? 0 : 1));\r\n                let type = buf[off++], id = (buf[off++] << 8) + buf[off++], typeName = typeNames[type], key = keyName.val, entry = {\r\n                    typeID: type,\r\n                    name: key,\r\n                    sn: (buf[off++] << 8) + buf[off++],\r\n                    flags: this.is2_0 ? 0 : buf[off++]\r\n                };\r\n                let val = TypesFrom[entry.typeID](buf, off);\r\n                entry.val = val.val;\r\n                this.entries[id] = entry;\r\n                this.keymap[key] = id;\r\n                for (let i = 0; i < this.listeners.length; i++) {\r\n                    if (this.connected) {\r\n                        this.listeners[i](keyName.val, val.val, typeName, \"add\", id, entry.flags);\r\n                    }\r\n                    else {\r\n                        this.lateCallbacks.push(() => this.listeners[i](keyName.val, val.val, typeName, \"add\", id, entry.flags));\r\n                    }\r\n                }\r\n                if (typeof this.reAssign[key] != 'undefined') {\r\n                    let toUpdate = this.reAssign[key];\r\n                    this.Update(id, toUpdate.val);\r\n                    if (!this.is2_0 && entry.flags !== toUpdate.flags) {\r\n                        this.Flag(id, toUpdate.flags);\r\n                    }\r\n                    delete this.reAssign[key];\r\n                }\r\n                return val.offset;\r\n            },\r\n            /** Entry Update */\r\n            0x11: (buf, off) => {\r\n                checkBufLen(buf, off, 4 + (this.is2_0 ? 0 : 1));\r\n                let id = (buf[off++] << 8) + buf[off++], sn = (buf[off++] << 8) + buf[off++], type = this.is2_0 ? this.entries[id].typeID : buf[off++], val = TypesFrom[type](buf, off), typeName = typeNames[type], name = \"\";\r\n                if (typeof this.entries[id] != 'undefined' && type === this.entries[id].typeID) {\r\n                    let entry = this.entries[id];\r\n                    entry.sn = sn;\r\n                    entry.val = val.val;\r\n                    name = entry.name;\r\n                    for (let i = 0; i < this.listeners.length; i++) {\r\n                        if (this.connected) {\r\n                            this.listeners[i](name, val.val, typeName, \"update\", id, entry.flags);\r\n                        }\r\n                        else {\r\n                            this.lateCallbacks.push(() => this.listeners[i](name, val.val, typeName, \"update\", id, entry.flags));\r\n                        }\r\n                    }\r\n                }\r\n                return val.offset;\r\n            },\r\n            /** Entry Flags Update */\r\n            0x12: (buf, off) => {\r\n                checkBufLen(buf, off, 3);\r\n                let id = (buf[off++] << 8) + buf[off++], flags = buf[off++];\r\n                if (typeof this.entries[id] != 'undefined') {\r\n                    let entry = this.entries[id];\r\n                    entry.flags = flags;\r\n                    for (let i = 0; i < this.listeners.length; i++) {\r\n                        if (this.connected) {\r\n                            this.listeners[i](entry.name, entry.val, typeNames[entry.typeID], \"flagChange\", id, flags);\r\n                        }\r\n                        else {\r\n                            this.lateCallbacks.push(() => this.listeners[i](entry.name, entry.val, typeNames[entry.typeID], \"flagChange\", id, flags));\r\n                        }\r\n                    }\r\n                }\r\n                return off;\r\n            },\r\n            /** Entry Delete */\r\n            0x13: (buf, off) => {\r\n                checkBufLen(buf, off, 2);\r\n                let id = (buf[off++] << 8) + buf[off++], name = this.entries[id].name, typename = typeNames[this.entries[id].typeID], flags = this.entries[id].flags;\r\n                delete this.entries[id];\r\n                delete this.keymap[name];\r\n                for (let i = 0; i < this.listeners.length; i++) {\r\n                    if (this.connected) {\r\n                        this.listeners[i](name, null, typename, \"delete\", id, flags);\r\n                    }\r\n                    else {\r\n                        this.lateCallbacks.push(() => this.listeners[i](name, null, typename, \"delete\", id, flags));\r\n                    }\r\n                }\r\n                return off;\r\n            },\r\n            /** Clear All Entries */\r\n            0x14: (buf, off) => {\r\n                checkBufLen(buf, off, 4);\r\n                let val = 0;\r\n                for (let i = 0; i < 4; i++) {\r\n                    val = (val << 8) + buf[off + i];\r\n                }\r\n                if (val === 0xd06cb27a) {\r\n                    this.entries = {};\r\n                    this.keymap = {};\r\n                }\r\n                return off + 4;\r\n            },\r\n            /** RPC Response */\r\n            0x21: (buf, off) => {\r\n                checkBufLen(buf, off, 4);\r\n                let id = (buf[off++] << 8) + buf[off++], executeID = (buf[off++] << 8) + buf[off++], len = numFrom128(buf, off), res = this.entries[id].val.results, results = {}, s;\r\n                for (let i = 0; i < res.length; i++) {\r\n                    for (let i = 0; i < res.length; i++) {\r\n                        s = TypesFrom[res[i].typeId](buf, off);\r\n                        off = s.offset;\r\n                        results[res[i].name] = s.val;\r\n                    }\r\n                }\r\n                if (typeof this.RPCExecCallback[executeID] != 'undefined') {\r\n                    this.RPCExecCallback[executeID](results);\r\n                    delete this.RPCExecCallback[executeID];\r\n                }\r\n                return off;\r\n            }\r\n        };\r\n        this.toServer = {\r\n            Hello: (serverName) => {\r\n                if (this.is2_0) {\r\n                    this.write(toServer.hello2_0);\r\n                }\r\n                else {\r\n                    let s = TypeBuf[2 /* String */].toBuf(serverName), buf = buffer_1.Buffer.allocUnsafe(s.length + 3);\r\n                    buf[0] = 0x01;\r\n                    buf[1] = 3;\r\n                    buf[2] = 0;\r\n                    s.write(buf, 3);\r\n                    this.write(buf, true);\r\n                }\r\n            },\r\n            HelloComplete: () => {\r\n                this.write(toServer.helloComplete, true);\r\n                this.afterConnect();\r\n            }\r\n        };\r\n        this.keepAlive = buffer_1.Buffer.from([0]);\r\n        this.buffersToSend = [];\r\n        if (options == undefined)\r\n            return;\r\n        if (options.strictInput)\r\n            this.strictInput = true;\r\n    }\r\n    /**\r\n     * True if the Client has completed its hello and is connected\r\n     */\r\n    isConnected() {\r\n        return this.connected;\r\n    }\r\n    /**\r\n     * True if the client has switched to 2.0\r\n     */\r\n    uses2_0() {\r\n        return this.is2_0;\r\n    }\r\n    /**\r\n     * Start the Client\r\n     * @param callback Called on connect or error\r\n     * @param address Address of the Server. Default = \"localhost\"\r\n     * @param port Port of the Server. Default = 1735\r\n     */\r\n    start(callback, address = \"127.0.0.1\", port = 1735) {\r\n        this.connected = false;\r\n        this.address = address;\r\n        this.port = port;\r\n        this.conCallback = callback;\r\n        this.reAssign = {};\r\n        this.beingAssigned = [];\r\n        this.client = net\r\n            .connect(port, address, () => {\r\n            this.toServer.Hello(this.clientName);\r\n            this.client.on(\"data\", data => {\r\n                let pos = 0, buf = data;\r\n                if (this.continuation != null) {\r\n                    pos = this.continuation.offset;\r\n                    buf = buffer_1.Buffer.concat([this.continuation.buf, buf]);\r\n                    this.continuation = null;\r\n                }\r\n                try {\r\n                    this.read(buf, pos);\r\n                }\r\n                catch (e) {\r\n                    this.conCallback(true, e, this.is2_0);\r\n                }\r\n            });\r\n        })\r\n            .on(\"close\", hadError => {\r\n            this.connected = false;\r\n            this.oldEntries = this.entries;\r\n            this.entries = {};\r\n            this.keymap = {};\r\n            if (this.reconnect) {\r\n                this.start(callback, address, port);\r\n            }\r\n            else if (!hadError)\r\n                callback(false, null, this.is2_0);\r\n        })\r\n            .on(\"error\", err => callback(false, err, this.is2_0));\r\n    }\r\n    /**\r\n     * Adds and returns a Listener to be called on change of an Entry\r\n     * @param callback Listener\r\n     */\r\n    addListener(callback) {\r\n        this.listeners.push(callback);\r\n        return callback;\r\n    }\r\n    /**\r\n     * Removes a Listener\r\n     * @param listener the Listener to remove\r\n     */\r\n    removeListener(listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    }\r\n    getKeyID(key) {\r\n        if (key == undefined) {\r\n            return this.keymap;\r\n        }\r\n        else\r\n            return this.keymap[key];\r\n    }\r\n    /**\r\n     * Gets an Entry\r\n     * @param id ID of an Entry\r\n     */\r\n    getEntry(id) {\r\n        return this.entries[id];\r\n    }\r\n    /**\r\n     * Get an Array of Keys\r\n     */\r\n    getKeys() {\r\n        return Object.keys(this.keymap);\r\n    }\r\n    /**\r\n     * Get All of the Entries\r\n     */\r\n    getEntries() {\r\n        return this.entries;\r\n    }\r\n    read(buf, off) {\r\n        checkBufLen(buf, off, 1);\r\n        if (buf.length == off)\r\n            return;\r\n        if (typeof this.recProto[buf[off]] != 'undefined') {\r\n            try {\r\n                off = this.recProto[buf[off]](buf, off + 1);\r\n                this.read(buf, off);\r\n            }\r\n            catch (e) {\r\n                if (e instanceof LengthError) {\r\n                    this.continuation = { buf, offset: off };\r\n                    return;\r\n                }\r\n                else\r\n                    throw e;\r\n            }\r\n        }\r\n        else\r\n            throw new Error(\"Unknown Message Type \" + buf[off]);\r\n    }\r\n    afterConnect() {\r\n        this.conCallback(true, null, this.is2_0);\r\n        while (this.lateCallbacks.length) {\r\n            this.lateCallbacks.shift()();\r\n        }\r\n    }\r\n    /**\r\n     * Add an Entry\r\n     * @param val The Value\r\n     * @param name The Key of the Entry\r\n     * @param persist Whether the Value should persist on the server through a restart\r\n     */\r\n    Assign(val, name, persist = false) {\r\n        let type = getType(val);\r\n        if (this.is2_0 && type === 3 /* RawData */)\r\n            return new Error(\"2.0 does not have Raw Data\");\r\n        if (type === 32 /* RPC */)\r\n            return new Error(\"Clients can not assign an RPC\");\r\n        if (!this.connected) {\r\n            let nID = this.newKeyMap.length;\r\n            this.newKeyMap[nID] = {\r\n                typeID: type,\r\n                val,\r\n                flags: +persist,\r\n                name: name\r\n            };\r\n            this.listeners.map(e => e(name, val, typeNames[type], \"add\", -nID - 1, +persist));\r\n            return;\r\n        }\r\n        if (typeof this.keymap[name] != 'undefined') {\r\n            return this.Update(this.keymap[name], val);\r\n        }\r\n        if (this.beingAssigned.indexOf(name) >= 0) {\r\n            this.reAssign[name] = { val, flags: +persist };\r\n            return;\r\n        }\r\n        else {\r\n            this.beingAssigned.push(name);\r\n        }\r\n        let n = TypeBuf[2 /* String */].toBuf(name), f = TypeBuf[type].toBuf(val), nlen = n.length, assignLen = this.is2_0 ? 6 : 7, len = f.length + nlen + assignLen, buf = buffer_1.Buffer.allocUnsafe(len);\r\n        buf[0] = 0x10;\r\n        n.write(buf, 1);\r\n        buf[nlen + 1] = type;\r\n        buf[nlen + 2] = 0xff;\r\n        buf[nlen + 3] = 0xff;\r\n        buf[nlen + 4] = 0;\r\n        buf[nlen + 5] = 0;\r\n        if (!this.is2_0)\r\n            buf[nlen + 6] = +persist;\r\n        f.write(buf, nlen + assignLen);\r\n        this.write(buf);\r\n    }\r\n    /**\r\n     * Updates an Entry\r\n     * @param id The ID of the Entry\r\n     * @param val The value of the Entry\r\n     */\r\n    Update(id, val) {\r\n        if (id < 0) {\r\n            let nEntry = this.newKeyMap[-id - 1];\r\n            let testVal = this.fixType(val, nEntry.typeID);\r\n            if (testVal != null) {\r\n                val = testVal;\r\n                if (this.connected) {\r\n                    if (typeof this.keymap[nEntry.name] != 'undefined') {\r\n                        id = this.keymap[nEntry.name];\r\n                    }\r\n                    else {\r\n                        return this.Assign(val, nEntry.name, nEntry.flags > 0);\r\n                    }\r\n                }\r\n                else {\r\n                    nEntry.val = val;\r\n                    this.listeners.map(e => e(nEntry.name, val, typeNames[nEntry.typeID], \"update\", id, nEntry.val));\r\n                    return;\r\n                }\r\n            }\r\n            else\r\n                return new Error(`Wrong Type: ${val} is not a ${typeNames[nEntry.typeID]}`);\r\n        }\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"ID not found\");\r\n        let entry = this.entries[id], testVal = this.fixType(val, entry.typeID);\r\n        if (testVal == null)\r\n            return new Error(`Wrong Type: ${val} is not a ${typeNames[entry.typeID]}`);\r\n        val = entry.val = testVal;\r\n        entry.sn++;\r\n        if (!this.connected) {\r\n            if (this.updatedIDs.indexOf(id) < 0)\r\n                this.updatedIDs.push(id);\r\n            this.listeners.map(e => e(entry.name, val, typeNames[entry.typeID], \"update\", id, entry.flags));\r\n            return;\r\n        }\r\n        let f = TypeBuf[entry.typeID].toBuf(val), updateLen = this.is2_0 ? 5 : 6, len = f.length + updateLen, buf = buffer_1.Buffer.allocUnsafe(len);\r\n        buf[0] = 0x11;\r\n        buf[1] = id >> 8;\r\n        buf[2] = id & 0xff;\r\n        buf[3] = entry.sn >> 8;\r\n        buf[4] = entry.sn & 0xff;\r\n        if (!this.is2_0)\r\n            buf[5] = entry.typeID;\r\n        f.write(buf, updateLen);\r\n        this.write(buf);\r\n        this.listeners.map(e => e(entry.name, val, typeNames[entry.typeID], \"update\", id, entry.flags));\r\n    }\r\n    /**\r\n     * Updates the Flag of an Entry\r\n     * @param id The ID of the Entry\r\n     * @param flags Whether the Entry should persist through a restart on the server\r\n     */\r\n    Flag(id, flags = false) {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support flags\");\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"Does not exist\");\r\n        this.write(buffer_1.Buffer.from([0x12, id >> 8, id & 0xff, +flags]));\r\n    }\r\n    /**\r\n     * Deletes an Entry\r\n     * @param id The ID of the Entry\r\n     */\r\n    Delete(id) {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support delete\");\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"Does not exist\");\r\n        this.write(buffer_1.Buffer.from([0x13, id >> 8, id & 0xff]));\r\n    }\r\n    /**\r\n     * Deletes All Entries\r\n     */\r\n    DeleteAll() {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support delete\");\r\n        this.write(toServer.deleteAll);\r\n        this.entries = {};\r\n        this.keymap = {};\r\n    }\r\n    /**\r\n     * Executes an RPC\r\n     * @param id The ID of the RPC Entry\r\n     * @param val The Values of the Parameters\r\n     * @param callback To be called with the Results\r\n     */\r\n    RPCExec(id, val, callback) {\r\n        if (this.is2_0)\r\n            return new Error(\"2.0 does not support RPC\");\r\n        if (typeof this.entries[id] == 'undefined')\r\n            return new Error(\"Does not exist\");\r\n        let entry = this.entries[id];\r\n        if (entry.typeID !== 32 /* RPC */)\r\n            return new Error(\"Is not an RPC\");\r\n        let par = entry.val.par, f = [], value, len = 0, parName = \"\";\r\n        for (let i = 0; i < par.length; i++) {\r\n            parName = par[i].name;\r\n            value = typeof val[parName] != 'undefined' ? val[parName] : par[i].default;\r\n            let testVal = this.fixType(value, par[i].typeId);\r\n            if (testVal == null)\r\n                return new Error(`Wrong Type: ${value} is not a ${typeNames[par[i].typeId]}`);\r\n            let n = TypeBuf[par[i].typeId].toBuf(testVal);\r\n            len += n.length;\r\n            f.push(n);\r\n        }\r\n        let encLen = numTo128(len), buf = buffer_1.Buffer.allocUnsafe(len + encLen.length + 5), off = 5 + encLen.length, randId = Math.floor(Math.random() * 0xffff);\r\n        buf[0] = 0x21;\r\n        buf[1] = id >> 8;\r\n        buf[2] = id & 0xff;\r\n        buf[3] = randId >> 8;\r\n        buf[4] = randId & 0xff;\r\n        encLen.copy(buf, 5);\r\n        for (let i = 0; i < f.length; i++) {\r\n            f[i].write(buf, off);\r\n            off += f[i].length;\r\n        }\r\n        this.write(buf);\r\n        this.RPCExecCallback[randId] = callback;\r\n    }\r\n    /**\r\n     * Direct Write to the Server\r\n     * @param buf The Buffer to be sent\r\n     * @param immediate whether the write should happen right away\r\n     */\r\n    write(buf, immediate = false) {\r\n        if (this.aliveTimer)\r\n            clearTimeout(this.aliveTimer);\r\n        this.aliveTimer = setTimeout(() => {\r\n            this.write(this.keepAlive);\r\n        }, 1000);\r\n        if (this.aliveTimer.unref)\r\n            this.aliveTimer.unref();\r\n        if (immediate)\r\n            this.client.write(buf);\r\n        else {\r\n            this.buffersToSend.push(buf);\r\n            if (!this.bufferTimer)\r\n                this.bufferTimer = setTimeout(() => {\r\n                    this.client.write(buffer_1.Buffer.concat(this.buffersToSend));\r\n                    this.bufferTimer = null;\r\n                }, 20);\r\n        }\r\n    }\r\n    fixType(val, type) {\r\n        if (Array.isArray(val)) {\r\n            if (type === 16 /* BoolArray */) {\r\n                if (val.every(e => typeof e === \"boolean\"))\r\n                    return val;\r\n                else if (!this.strictInput) {\r\n                    let tryVal = [];\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        if (val[i] == \"true\" || val[i] == \"false\")\r\n                            tryVal.push(val[i] == \"true\");\r\n                        else\r\n                            return;\r\n                    }\r\n                    return tryVal;\r\n                }\r\n            }\r\n            else if (type === 17 /* DoubleArray */) {\r\n                if (val.every(e => typeof e === \"number\")) {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput) {\r\n                    let tryVal = [];\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        let testVal = parseFloat(val[i]);\r\n                        if (Number.isNaN(testVal))\r\n                            return;\r\n                        else\r\n                            tryVal.push(testVal);\r\n                    }\r\n                    return tryVal;\r\n                }\r\n            }\r\n            else if (type === 18 /* StringArray */) {\r\n                if (val.every(e => typeof e === \"string\")) {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput) {\r\n                    return val.map(a => a.toString());\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (type === 0 /* Boolean */) {\r\n                if (typeof val === \"boolean\") {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput &&\r\n                    (val == \"true\" || val == \"false\")) {\r\n                    return val == \"true\";\r\n                }\r\n            }\r\n            else if (type === 1 /* Double */) {\r\n                if (typeof val === \"number\") {\r\n                    return val;\r\n                }\r\n                else if (!this.strictInput) {\r\n                    let testVal = parseFloat(val);\r\n                    if (!Number.isNaN(testVal)) {\r\n                        return testVal;\r\n                    }\r\n                }\r\n            }\r\n            else if (type === 2 /* String */) {\r\n                if (!this.strictInput || typeof val == \"string\")\r\n                    return val.toString();\r\n            }\r\n            else if (type === 3 /* RawData */ && buffer_1.Buffer.isBuffer(val))\r\n                return val;\r\n        }\r\n        if (type === 3 /* RawData */ && !this.strictInput) {\r\n            if (typeof val == \"number\" &&\r\n                val <= 0xff &&\r\n                val >= 0 &&\r\n                Number.isInteger(val)) {\r\n                return buffer_1.Buffer.from([val]);\r\n            }\r\n            else if (Array.isArray(val) &&\r\n                val.every(a => typeof a == \"number\" &&\r\n                    a >= 0 &&\r\n                    a <= 0xff &&\r\n                    Number.isInteger(a))) {\r\n                return buffer_1.Buffer.from(val);\r\n            }\r\n            else if (typeof val == \"string\") {\r\n                return buffer_1.Buffer.from(val);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Client = Client;\r\nconst typeNames = {\r\n    0x00: \"Boolean\",\r\n    0x01: \"Number\",\r\n    0x02: \"String\",\r\n    0x03: \"Buffer\",\r\n    0x10: \"BooleanArray\",\r\n    0x11: \"NumberArray\",\r\n    0x12: \"StringArray\",\r\n    0x20: \"RPC\"\r\n};\r\nfunction checkTypeI(val, type) {\r\n    if (Array.isArray(val)) {\r\n        if (type === 16 /* BoolArray */ && val.every(e => typeof e === \"boolean\"))\r\n            return true;\r\n        else if (type === 17 /* DoubleArray */ &&\r\n            val.every(e => typeof e === \"number\"))\r\n            return true;\r\n        else if (type === 18 /* StringArray */ &&\r\n            val.every(e => typeof e === \"string\"))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    else {\r\n        if (type === 0 /* Boolean */ && typeof val === \"boolean\")\r\n            return true;\r\n        else if (type === 1 /* Double */ && typeof val === \"number\")\r\n            return true;\r\n        else if (type === 2 /* String */ && typeof val === \"string\")\r\n            return true;\r\n        else if (type === 3 /* RawData */ && buffer_1.Buffer.isBuffer(val))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n}\r\nfunction getType(val) {\r\n    if (Array.isArray(val)) {\r\n        if (typeof val[0] === \"boolean\")\r\n            return 0x10;\r\n        else if (typeof val[0] === \"number\")\r\n            return 0x11;\r\n        else if (typeof val[0] === \"string\")\r\n            return 0x12;\r\n        else if (typeof val[0] === \"object\")\r\n            return 0x20;\r\n    }\r\n    else {\r\n        if (typeof val === \"boolean\")\r\n            return 0x00;\r\n        else if (typeof val === \"number\")\r\n            return 0x01;\r\n        else if (typeof val === \"string\")\r\n            return 0x02;\r\n        else if (buffer_1.Buffer.isBuffer(val))\r\n            return 0x03;\r\n    }\r\n}\r\nconst toServer = {\r\n    helloComplete: buffer_1.Buffer.from([0x05]),\r\n    deleteAll: buffer_1.Buffer.from([0x14, 0xd0, 0x6c, 0xb2, 0x7a]),\r\n    hello2_0: buffer_1.Buffer.from([0x01, 2, 0])\r\n};\r\nconst TypeBuf = {\r\n    0x00: {\r\n        toBuf: val => {\r\n            return {\r\n                length: 1,\r\n                write: (buf, off) => {\r\n                    buf[off] = +val;\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            return {\r\n                offset: off + 1,\r\n                val: buf[off] > 0\r\n            };\r\n        }\r\n    },\r\n    0x01: {\r\n        toBuf: val => {\r\n            return {\r\n                length: 8,\r\n                write: (buf, off) => {\r\n                    ieee754.write(buf, val, off, false, 52, 8);\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 8);\r\n            return {\r\n                offset: off + 8,\r\n                val: ieee754.read(buf, off, false, 52, 8)\r\n            };\r\n        }\r\n    },\r\n    0x02: {\r\n        toBuf: val => {\r\n            let bufT = buffer_1.Buffer.concat([\r\n                strLenIdent(val.length),\r\n                buffer_1.Buffer.from(val, \"utf8\")\r\n            ]);\r\n            return {\r\n                length: bufT.length,\r\n                write: (buf, off) => {\r\n                    bufT.copy(buf, off);\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            return fromLEBuf(buf, off);\r\n        }\r\n    },\r\n    0x03: {\r\n        toBuf: val => {\r\n            let len = numTo128(val.length);\r\n            return {\r\n                length: val.length + len.length,\r\n                write: (buf, off) => {\r\n                    len.copy(buf, off);\r\n                    val.copy(buf, off + len.length);\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            let { val, offset } = numFrom128(buf, off), nbuf = buffer_1.Buffer.allocUnsafe(val), end = offset + val;\r\n            checkBufLen(buf, off, val);\r\n            buf.copy(nbuf, 0, offset);\r\n            return {\r\n                offset: end,\r\n                val: nbuf\r\n            };\r\n        }\r\n    },\r\n    0x10: {\r\n        toBuf: val => {\r\n            return {\r\n                length: val.length + 1,\r\n                write: (buf, off) => {\r\n                    buf[off] = val.length;\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        buf[off + i] = +val[i];\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let len = buf[off], res = [];\r\n            off++;\r\n            checkBufLen(buf, off, len);\r\n            for (let i = 0; i < len; i++) {\r\n                res.push(buf[off + i] > 0);\r\n            }\r\n            return {\r\n                offset: off + len,\r\n                val: res\r\n            };\r\n        }\r\n    },\r\n    0x11: {\r\n        toBuf: val => {\r\n            let len = val.length;\r\n            return {\r\n                length: 8 * val.length + 1,\r\n                write: (buf, off) => {\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        buf[off] = val.length;\r\n                        off++;\r\n                        ieee754.write(buf, val[i], off + 8 * i, false, 52, 8);\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let val = buf[off], num = [];\r\n            off++;\r\n            checkBufLen(buf, off, 8 * val);\r\n            for (let i = 0; i < val; i++) {\r\n                num.push(ieee754.read(buf, off + i * 8, false, 52, 8));\r\n            }\r\n            return {\r\n                offset: off + val * 8,\r\n                val: num\r\n            };\r\n        }\r\n    },\r\n    0x12: {\r\n        toBuf: val => {\r\n            let lens = [], len = 1;\r\n            for (let i = 0; i < val.length; i++) {\r\n                lens[i] = buffer_1.Buffer.concat([\r\n                    strLenIdent(val[i].length),\r\n                    buffer_1.Buffer.from(val[i])\r\n                ]);\r\n                len += lens[i].length;\r\n            }\r\n            return {\r\n                length: len,\r\n                write: (buf, off) => {\r\n                    buf[off] = val.length;\r\n                    off++;\r\n                    for (let i = 0; i < val.length; i++) {\r\n                        lens[i].copy(buf, off);\r\n                        off += lens[i].length;\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let len = buf[off], s = [], st;\r\n            off++;\r\n            for (let i = 0; i < len; i++) {\r\n                st = fromLEBuf(buf, off);\r\n                s[i] = st.val;\r\n                off = st.offset;\r\n            }\r\n            return {\r\n                offset: off,\r\n                val: s\r\n            };\r\n        }\r\n    },\r\n    0x20: {\r\n        fromBuf: (buf, off) => {\r\n            checkBufLen(buf, off, 1);\r\n            let st;\r\n            if (buf[off] !== 1)\r\n                throw new Error(\"Unsupported RPC Definition\");\r\n            off++;\r\n            st = fromLEBuf(buf, off);\r\n            off = st.offset;\r\n            checkBufLen(buf, off, 1);\r\n            let name = st.val, parNum = buf[off], par = [], results = [], s = { offset: 0, val: \"\" }, resNum = 0;\r\n            off++;\r\n            for (let i = 0; i < parNum; i++) {\r\n                let lastPar = {\r\n                    typeId: 0,\r\n                    typeName: \"\",\r\n                    name: \"\",\r\n                    default: 0\r\n                };\r\n                checkBufLen(buf, off, 1);\r\n                lastPar.typeId = buf[off];\r\n                lastPar.typeName = typeNames[lastPar.typeId];\r\n                s = fromLEBuf(buf, off);\r\n                lastPar.name = s.val;\r\n                off = s.offset;\r\n                let t = TypesFrom[lastPar.typeId](buf, off);\r\n                lastPar.default = t.val;\r\n                off = t.offset;\r\n                par.push(lastPar);\r\n            }\r\n            checkBufLen(buf, off, 1);\r\n            resNum = buf[off++];\r\n            for (let i = 0; i < resNum; i++) {\r\n                let res = { typeId: 0, typeName: \"\", name: \"\" };\r\n                checkBufLen(buf, off, 1);\r\n                res.typeId = buf[off];\r\n                res.typeName = typeNames[res.typeId];\r\n                s = fromLEBuf(buf, off + 1);\r\n                res.name = s.val;\r\n                off = s.offset;\r\n                results.push(res);\r\n            }\r\n            return {\r\n                offset: off,\r\n                val: {\r\n                    name,\r\n                    par,\r\n                    results\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nvar TypesFrom = {\r\n    0x00: TypeBuf[0 /* Boolean */].fromBuf,\r\n    0x01: TypeBuf[1 /* Double */].fromBuf,\r\n    0x02: TypeBuf[2 /* String */].fromBuf,\r\n    0x03: TypeBuf[3 /* RawData */].fromBuf,\r\n    0x10: TypeBuf[16 /* BoolArray */].fromBuf,\r\n    0x11: TypeBuf[17 /* DoubleArray */].fromBuf,\r\n    0x12: TypeBuf[18 /* StringArray */].fromBuf,\r\n    0x20: TypeBuf[32 /* RPC */].fromBuf\r\n    //0x21: TypeBuf[e.Byte].fromBuf\r\n};\r\n/**\r\n * Decodes String where first bytes are length encoded using LEB128\r\n * @param buf Buffer to red from\r\n * @param offset position to start reading from\r\n * @throws LengthError\r\n */\r\nfunction fromLEBuf(buf, offset) {\r\n    let res = numFrom128(buf, offset), end = res.offset + res.val;\r\n    checkBufLen(buf, res.offset, res.val);\r\n    return { offset: end, val: buf.slice(res.offset, end).toString(\"utf8\") };\r\n}\r\nfunction numTo128(num) {\r\n    let n = num;\r\n    let r = [];\r\n    while (n > 0x07f) {\r\n        r.push((n & 0x7f) | 0x80);\r\n        n = n >> 7;\r\n    }\r\n    r.push(n);\r\n    return buffer_1.Buffer.from(r);\r\n}\r\nfunction numTo2Byte(num) {\r\n    return buffer_1.Buffer.from([(this >> 8) & 0xff, this & 0xff]);\r\n}\r\n/**\r\n * Decodes a number encoded in LEB128\r\n * @param buf Buffer to red from\r\n * @param offset position to start reading from\r\n * @throws LengthError\r\n */\r\nfunction numFrom128(buf, offset) {\r\n    let r = 0, n = buf[offset];\r\n    offset++;\r\n    r = n & 0x7f;\r\n    while (n > 0x7f) {\r\n        checkBufLen(buf, offset, 1);\r\n        n = buf[offset];\r\n        r = (r << 7) + (n & 0x7f);\r\n        offset++;\r\n    }\r\n    return {\r\n        val: r,\r\n        offset\r\n    };\r\n}\r\n/**\r\n * Error thrown when buffer is too short\r\n */\r\nclass LengthError extends Error {\r\n    constructor(mesg, pos = 0, length = 1) {\r\n        if (typeof mesg !== \"string\") {\r\n            super(`Trying to read ${length} bytes from position ${pos} of a buffer that is ${mesg.length} long`);\r\n            this.buf = mesg;\r\n            this.position = pos;\r\n        }\r\n        else\r\n            super(mesg);\r\n    }\r\n}\r\nexports.LengthError = LengthError;\r\n/**\r\n * Check if the Buffer is long enought\r\n * @param buf Buffer to check the length of\r\n * @param start Position to read from\r\n * @param length Number of bytes that will be read\r\n * @throws LengthError\r\n */\r\nfunction checkBufLen(buf, start, length) {\r\n    if (buf.length < start + length - 1)\r\n        throw new LengthError(buf, start, length);\r\n}\r\n"},{"id":7,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/ieee754/index.js","name":"./node_modules/ieee754/index.js","index":8,"index2":5,"size":2054,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","issuerId":6,"issuerName":"./node_modules/wpilib-nt-client/index.js","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":6,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","module":"./node_modules/wpilib-nt-client/index.js","moduleName":"./node_modules/wpilib-nt-client/index.js","type":"cjs require","userRequest":"ieee754","loc":"3:16-34"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3,"source":"exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"},{"id":8,"identifier":"external \"net\"","name":"external \"net\"","index":9,"index2":6,"size":42,"cacheable":false,"built":false,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","issuerId":6,"issuerName":"./node_modules/wpilib-nt-client/index.js","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":6,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","module":"./node_modules/wpilib-nt-client/index.js","moduleName":"./node_modules/wpilib-nt-client/index.js","type":"cjs require","userRequest":"net","loc":"4:12-26"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3},{"id":9,"identifier":"external \"buffer\"","name":"external \"buffer\"","index":10,"index2":7,"size":42,"cacheable":false,"built":false,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","issuerId":6,"issuerName":"./node_modules/wpilib-nt-client/index.js","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":6,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/wpilib-nt-client/index.js","module":"./node_modules/wpilib-nt-client/index.js","moduleName":"./node_modules/wpilib-nt-client/index.js","type":"cjs require","userRequest":"buffer","loc":"5:17-34"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3},{"id":10,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/file-loader/dist/cjs.js??ref--4-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/reshape-loader/lib/index.js??ref--4-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/index.sgr","name":"./src/index.sgr","index":11,"index2":10,"size":56,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":["index.html"],"issuer":"multi ./index.tsx ./index.sgr","issuerId":1,"issuerName":"multi ./index.tsx ./index.sgr","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":1,"moduleIdentifier":"multi ./index.tsx ./index.sgr","module":"multi ./index.tsx ./index.sgr","moduleName":"multi ./index.tsx ./index.sgr","type":"single entry","userRequest":"./index.sgr","loc":"main:100001"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"module.exports = __webpack_public_path__ + \"index.html\";"},{"id":11,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/css-loader/lib/css-base.js","name":"./node_modules/css-loader/lib/css-base.js","index":5,"index2":1,"size":2260,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/es6-extract-text-webpack-plugin/dist/loader.js??ref--2-0!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js??ref--2-2!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","issuerId":5,"issuerName":"./src/style.sss","failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":3,"source":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"}],"filteredModules":0,"children":[{"errors":[],"warnings":[],"publicPath":"","assetsByChunkName":{},"assets":[],"filteredAssets":0,"entrypoints":{"undefined":{"chunks":[0],"assets":["extract-text-webpack-plugin-output-filename"]}},"chunks":[{"id":0,"rendered":true,"initial":true,"entry":true,"extraAsync":false,"size":2454,"names":[],"files":["extract-text-webpack-plugin-output-filename"],"hash":"bfbe9067e1e12644472f","parents":[],"modules":[{"id":0,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","name":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","index":0,"index2":1,"size":194,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":null,"issuerId":null,"issuerName":null,"failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":0,"source":"exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body{background:#282828;color:#fff}\", \"\"]);\n\n// exports\n"},{"id":1,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/css-loader/lib/css-base.js","name":"./node_modules/css-loader/lib/css-base.js","index":1,"index2":0,"size":2260,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","issuerId":0,"issuerName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":0,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","module":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","moduleName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","type":"cjs require","userRequest":"../node_modules/css-loader/lib/css-base.js","loc":"1:27-80"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"}],"filteredModules":0,"origins":[{"moduleId":0,"module":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","moduleName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","loc":"","reasons":[]}]}],"modules":[{"id":0,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","name":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","index":0,"index2":1,"size":194,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":null,"issuerId":null,"issuerName":null,"failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":0,"source":"exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body{background:#282828;color:#fff}\", \"\"]);\n\n// exports\n"},{"id":1,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/css-loader/lib/css-base.js","name":"./node_modules/css-loader/lib/css-base.js","index":1,"index2":0,"size":2260,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","issuerId":0,"issuerName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":0,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/style.sss","module":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","moduleName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/style.sss","type":"cjs require","userRequest":"../node_modules/css-loader/lib/css-base.js","loc":"1:27-80"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"}],"filteredModules":0,"children":[],"name":"extract-text-webpack-plugin node_modules/es6-extract-text-webpack-plugin/dist node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!node_modules/postcss-loader/lib/index.js??ref--2-2!src/style.sss"},{"errors":[],"warnings":[],"publicPath":"","assetsByChunkName":{},"assets":[],"filteredAssets":0,"entrypoints":{"undefined":{"chunks":[0],"assets":["extract-text-webpack-plugin-output-filename"]}},"chunks":[{"id":0,"rendered":true,"initial":true,"entry":true,"extraAsync":false,"size":2808,"names":[],"files":["extract-text-webpack-plugin-output-filename"],"hash":"7d98cc696a1408a9b029","parents":[],"modules":[{"id":0,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","name":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","index":0,"index2":1,"size":548,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":null,"issuerId":null,"issuerName":null,"failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":0,"source":"exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".g-robot-map{font-size:10px;width:27em;height:54em;background:blue;position:relative}.g-robot-map .robot{background:green;width:2em;height:3em}.g-robot-map .point{background:red;width:4px;height:4px;border-radius:50%;position:absolute;transform:translate(-2px,2px)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"g-robot-map\": \"g-robot-map\",\n\t\"gRobotMap\": \"g-robot-map\",\n\t\"robot\": \"robot\",\n\t\"point\": \"point\"\n};"},{"id":1,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/css-loader/lib/css-base.js","name":"./node_modules/css-loader/lib/css-base.js","index":1,"index2":0,"size":2260,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","issuerId":0,"issuerName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":0,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","module":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","moduleName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","type":"cjs require","userRequest":"../../../node_modules/css-loader/lib/css-base.js","loc":"1:27-86"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"}],"filteredModules":0,"origins":[{"moduleId":0,"module":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","moduleName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","loc":"","reasons":[]}]}],"modules":[{"id":0,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","name":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","index":0,"index2":1,"size":548,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":null,"issuerId":null,"issuerName":null,"failed":false,"errors":0,"warnings":0,"reasons":[],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":0,"source":"exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".g-robot-map{font-size:10px;width:27em;height:54em;background:blue;position:relative}.g-robot-map .robot{background:green;width:2em;height:3em}.g-robot-map .point{background:red;width:4px;height:4px;border-radius:50%;position:absolute;transform:translate(-2px,2px)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"g-robot-map\": \"g-robot-map\",\n\t\"gRobotMap\": \"g-robot-map\",\n\t\"robot\": \"robot\",\n\t\"point\": \"point\"\n};"},{"id":1,"identifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/css-loader/lib/css-base.js","name":"./node_modules/css-loader/lib/css-base.js","index":1,"index2":0,"size":2260,"cacheable":true,"built":true,"optional":false,"prefetched":false,"chunks":[0],"assets":[],"issuer":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","issuerId":0,"issuerName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","failed":false,"errors":0,"warnings":0,"reasons":[{"moduleId":0,"moduleIdentifier":"/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/typings-for-css-modules-loader/lib/index.js?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/node_modules/postcss-loader/lib/index.js?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!/home/caleb/Programming/src/github.com/pigmice2733/dashboard/src/components/robot-map/style.sss","module":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","moduleName":"./node_modules/typings-for-css-modules-loader/lib?{\"namedExport\":true,\"modules\":true,\"localIdentName\":\"[local]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"parser\":{},\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"rucksack\",\"postcssVersion\":\"5.2.18\"},null,null,{\"version\":\"5.2.18\",\"plugins\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"postcssPlugin\":\"cssnano\",\"postcssVersion\":\"5.2.18\"}]}!./src/components/robot-map/style.sss","type":"cjs require","userRequest":"../../../node_modules/css-loader/lib/css-base.js","loc":"1:27-86"}],"usedExports":true,"providedExports":null,"optimizationBailout":["ModuleConcatenation bailout: Module is not an ECMAScript module"],"depth":1,"source":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"}],"filteredModules":0,"children":[],"name":"extract-text-webpack-plugin node_modules/es6-extract-text-webpack-plugin/dist node_modules/typings-for-css-modules-loader/lib/index.js??ref--2-1!node_modules/postcss-loader/lib/index.js??ref--2-2!src/components/robot-map/style.sss"}]}]}